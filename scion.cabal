name:            scion
version:         0.1.0.10
license:         BSD3
license-file:    docs/LICENSE
author:          Thomas Schilling <nominolo@googlemail.com>
maintainer:      Thomas Schilling <nominolo@googlemail.com>, JP Moresmau <jpmoresmau@gmail.com>
homepage:        http://github.com/nominolo/scion
synopsis:        Haskell IDE library
description:
  Scion is a Haskell library that aims to implement those parts of a
  Haskell IDE which are independent of a particular front-end.  Scion
  is based on the GHC API and Cabal.  It provides both a Haskell API and
  a server for non-Haskell clients such as Emacs and Vim.
  .
  See the homepage <http://code.google.com/p/scion-lib> and the README
  <http://github.com/nominolo/scion/blob/master/README.markdown> for
  more information.

category:        Development
stability:       provisional
build-type:      Simple

cabal-version:   >= 1.6
extra-source-files: README.markdown
data-files:
  emacs/*.el
  vim_runtime_path/autoload/*.vim
  vim_runtime_path/ftplugin/*.vim
  vim_runtime_path/plugin/*.vim

flag testing
  description: Enable Debugging things like QuickCheck properties, etc.
  default: False

flag server
  description: Install the scion-server.
  default: True

flag cabal_1_8
  description: Enable the Cabal library 1.8 features
  default: False

flag cabal_1_10
  description: Enable the Cabal library 1.10 features
  default: False

flag cabal_1_12
  description: Enable the Cabal library 1.12 features
  default: False

library
  build-depends:
    base         == 4.*,
    hslogger     >= 1.0,
    ghc-paths    == 0.1.*,
    AttoJson     >= 0.5.8,
    multiset     >= 0.1 && < 0.3,
    uniplate,
    list-tries,
    binary       == 0.5.*,
    array        >= 0.2 && < 0.4,
    old-time     == 1.0.*
  
  if impl(ghc >= 7.0)
    build-depends:
      containers   >= 0.2 && < 0.5,
      directory    == 1.1.*,
      filepath     == 1.2.*,
      ghc          >= 7,
      syb,
      ghc-syb-utils >= 0.2.1,
      time         == 1.2.*,
      bytestring
  else
    build-depends:
      containers   >= 0.2 && < 0.4,
      directory    == 1.0.*,
      filepath     == 1.1.*,
      ghc          >= 6.10 && < 6.13,
      ghc-syb,
      ghc-syb-utils,
      time         == 1.1.*
  
  if flag(cabal_1_12)
    build-depends:
      Cabal          >= 1.11,
      hslogger       >= 1.1
    cpp-options:     -DCABAL_VERSION=112
  else
    if flag(cabal_1_10)
      build-depends:
        Cabal        >= 1.10,
        hslogger     >= 1.1
      cpp-options:   -DCABAL_VERSION=110
    else
      if flag(cabal_1_8)
        build-depends:
          Cabal      >= 1.8,
          hslogger   >= 1.1
        cpp-options: -DCABAL_VERSION=108
      else
        build-depends:
          Cabal      == 1.6.*
        cpp-options: -DCABAL_VERSION=106

  hs-source-dirs:  lib
  extensions:      CPP, PatternGuards, DeriveDataTypeable
  exposed-modules:
    Scion.Types,
    Scion.Types.ExtraInstances,
    Scion.Types.Notes,
    Scion.Types.Outline,
    Scion.Inspect,
    Scion.Inspect.Find,
    Scion.Inspect.TypeOf,
    Scion.Inspect.DefinitionSite,
    Scion.Inspect.PackageDB,
    Scion.Inspect.IFaceLoader,
    Scion.Utils,
    Scion.Session,
    Scion.Cabal,
    Scion.Ghc,
    Scion, Scion.Packages

  -- ghc options are additive...
  ghc-options:  -Wall

  if flag(testing)
    build-depends: QuickCheck >= 2
    cpp-options:   -DSCION_DEBUG

  if impl(ghc > 6.11)
    cpp-options:   -DHAVE_PACKAGE_DB_MODULES

  -- TODO: drop after 6.10.2 is out
  if impl(ghc >= 6.11.20081113) || impl(ghc >= 6.10.2 && < 6.11)
    cpp-options:   -DRECOMPILE_BUG_FIXED

  if impl(ghc == 6.10.*)
    cpp-options:   -DWPINLINE -DGHC_VERSION=610

  if impl(ghc == 6.12.*)
    cpp-options:  -DWPINLINE -DGHC_VERSION=612
    ghc-options:  -fno-warn-unused-do-bind

  other-modules: Scion.Types.JSONDictionary, Scion.Inspect.Completions

executable scion-server
  if !flag(server)
    buildable: False

  main-is: Main.hs
  hs-source-dirs: lib server

  build-depends:
    -- From the library:
    base         == 4.*,
    ghc-paths    == 0.1.*,
    hslogger     >= 1.0,
    AttoJson     >= 0.5.8,
    multiset     >= 0.1 && < 0.3,
    list-tries ,
    binary       == 0.5.*,
    array        >= 0.2 && < 0.4,
    old-time     == 1.0.*

  if impl(ghc >= 7.0)
    build-depends:
      containers   >= 0.2 && < 0.5,
      directory    == 1.1.*,
      filepath     == 1.2.*,
      ghc          >= 7,
      syb,
      ghc-syb-utils >= 0.2.1,
      time         == 1.2.*,
      bytestring
  else
    build-depends:
      containers   >= 0.2 && < 0.4,
      directory    == 1.0.*,
      filepath     == 1.1.*,
      ghc          >= 6.10 && < 6.13,
      ghc-syb,
      ghc-syb-utils,
      time         == 1.1.*

  if flag(cabal_1_12)
    build-depends:
      Cabal          >= 1.11,
      hslogger       >= 1.1
    cpp-options:     -DCABAL_VERSION=112
  else
    if flag(cabal_1_10)
      build-depends:
        Cabal        >= 1.10,
        hslogger     >= 1.1
      cpp-options:   -DCABAL_VERSION=110
    else
      if flag(cabal_1_8)
        build-depends:
          Cabal      >= 1.8,
          hslogger   >= 1.1
        cpp-options: -DCABAL_VERSION=108
      else
        build-depends:
          Cabal      == 1.6.*
        cpp-options: -DCABAL_VERSION=106
  
  if flag(server)
    
    if impl(ghc >= 7.0)
      build-depends:
        network    >= 2.3
    else
      build-depends:
        network    >= 2.1 && < 2.3,
        network-bytestring == 0.1.*
    
    build-depends:
      -- Server only
      bytestring   == 0.9.*,
      utf8-string  == 0.3.*
  
  other-modules:
   Scion,
   Scion.Cabal,
   Scion.Inspect,
   Scion.Inspect.DefinitionSite,
   Scion.Inspect.IFaceLoader,
   Scion.Session,
   Scion.Types,
   Scion.Types.Notes,
   Scion.Types.Outline,
   Scion.Utils,
   Scion.Ghc,
   Scion.Server.Commands,
   Scion.Server.ConnectionIO,
   Scion.Server.Generic,
   Scion.Server.Protocol,
   Scion.Packages,
   Scion.Types.JSONDictionary, Scion.Inspect.Completions
                 
  ghc-options: -Wall -fno-warn-unused-do-bind
  extensions:      CPP, PatternGuards, DeriveDataTypeable, OverlappingInstances, IncoherentInstances, FlexibleInstances, UndecidableInstances, TypeSynonymInstances

  if flag(testing)
    build-depends: QuickCheck >= 2
    cpp-options:   -DSCION_DEBUG

  if impl(ghc > 6.11)
    cpp-options:   -DHAVE_PACKAGE_DB_MODULES

  -- TODO: drop after 6.10.2 is out
  if impl(ghc >= 6.11.20081113) || impl(ghc >= 6.10.2 && < 6.11)
    cpp-options:   -DRECOMPILE_BUG_FIXED

  if impl(ghc == 6.10.*)
    cpp-options:   -DWPINLINE -DGHC_VERSION=610

  if impl(ghc == 6.12.*)
    cpp-options:   -DWPINLINE -DGHC_VERSION=612

executable scion-test
  if !flag(testing)
    buildable: False
  
  main-is: Test.hs
  build-depends:
    base         == 4.*,
    ghc-paths    == 0.1.*,
    hslogger     >= 1.0,
    AttoJson     >= 0.5.8,
    multiset     >= 0.1 && < 0.3,
    uniplate     ,
    list-tries ,
    binary       == 0.5.*,
    array        >= 0.2 && < 0.4,
    old-time     == 1.0.*,
    QuickCheck   >= 2,
    HUnit
    
  if impl(ghc >= 7.0)
    build-depends:
      containers   >= 0.2 && < 0.5,
      directory    == 1.1.*,
      filepath     == 1.2.*,
      ghc          >= 7,
      syb,
      ghc-syb-utils >= 0.2.1,
      time         == 1.2.*,
      bytestring
  else
    build-depends:
      containers   >= 0.2 && < 0.4,
      directory    == 1.0.*,
      filepath     == 1.1.*,
      ghc          >= 6.10 && < 6.13,
      ghc-syb,
      ghc-syb-utils,
      time         == 1.1.*
      
  if flag(cabal_1_12)
    build-depends:
      Cabal          >= 1.11,
      hslogger       >= 1.1
    cpp-options:     -DCABAL_VERSION=112
  else
    if flag(cabal_1_10)
      build-depends:
        Cabal        >= 1.10,
        hslogger     >= 1.1
      cpp-options:   -DCABAL_VERSION=110
    else
      if flag(cabal_1_8)
        build-depends:
          Cabal      >= 1.8,
          hslogger   >= 1.1
        cpp-options: -DCABAL_VERSION=108
      else
        build-depends:
          Cabal      == 1.6.*
        cpp-options: -DCABAL_VERSION=106

  hs-source-dirs:  lib
  extensions:      CPP, PatternGuards, DeriveDataTypeable
  other-modules:
    Scion.Types,
    Scion.Types.ExtraInstances,
    Scion.Types.Notes,
    Scion.Types.Outline,
    Scion.Inspect,
    Scion.Inspect.Find,
    Scion.Inspect.TypeOf,
    Scion.Inspect.DefinitionSite,
    Scion.Inspect.PackageDB,
    Scion.Utils,
    Scion.Session,
    Scion.Cabal,
    Scion.Ghc,
    Scion,
    Scion.Packages,
    Scion.Types.JSONDictionary,
    Test.Utils,
    Test.GHC.Gen,
    Test.CabalTest,
    Test.InspectTest, Scion.Inspect.Completions

  cpp-options:   -DSCION_DEBUG

  if impl(ghc > 6.11)
    cpp-options:   -DHAVE_PACKAGE_DB_MODULES

  -- TODO: drop after 6.10.2 is out
  if impl(ghc >= 6.11.20081113) || impl(ghc >= 6.10.2 && < 6.11)
    cpp-options:   -DRECOMPILE_BUG_FIXED

  if impl(ghc == 6.10.*)
    cpp-options:   -DWPINLINE -DGHC_VERSION=610

  if impl(ghc == 6.12.*)
    cpp-options:   -DGHC_VERSION=612

  ghc-options:  -Wall -fno-warn-unused-do-bind

  other-modules: Test.InspectTest
-- Unit testing for Scion.Types.Notes
executable STypeNotes-test
  if !flag(testing)
    buildable: False
  
  main-is: STypesNotesTest.hs
  build-depends:
    base         == 4.*,
    multiset     >= 0.1 && < 0.3,
    HUnit

  if impl(ghc >= 7.0)
    build-depends:
     filepath     == 1.2.*,
     ghc          >= 7
  else
    build-depends:
      filepath     == 1.1.*,
      ghc          >= 6.10 && < 6.13
    
  if flag(cabal_1_12)
    build-depends:
      Cabal          >= 1.11,
      hslogger       >= 1.1
    cpp-options:     -DCABAL_VERSION=112
  else
    if flag(cabal_1_10)
      build-depends:
        Cabal        >= 1.10,
        hslogger     >= 1.1
      cpp-options:   -DCABAL_VERSION=110
    else
      if flag(cabal_1_8)
        build-depends:
          Cabal      >= 1.8,
          hslogger   >= 1.1
        cpp-options: -DCABAL_VERSION=108
      else
        build-depends:
          Cabal      == 1.6.*
        cpp-options: -DCABAL_VERSION=106

  hs-source-dirs:  lib
  extensions:      CPP, PatternGuards
  other-modules:
    Scion.Types.Notes

  ghc-options:  -Wall -fno-warn-unused-do-bind
